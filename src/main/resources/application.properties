# ===================================================================
# === Varianta Final? - application.properties                    ===
# === Func?ioneaz? atât pe Render (produc?ie) cât ?i local        ===
# ===================================================================

# Numele aplica?iei
spring.application.name=Licenta

# ==================================
# === CONFIGURARE BAZ? DE DATE   ===
# ==================================
# Pe Render, folose?te adresa injectat?. Local, va trebui s? comentezi aceast?
# linie ?i s? o decomentezi pe cea pentru baza ta de date local? (SQLite sau alta).
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://dpg-d15h1ku3jp1c73ft52og-a:5432/trainon_database?user=trainon_database_user&password=aj7Y7aML9M7zyy11wMqtK9wWHMZVnNls&sslmode=require
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ==================================
# === CONFIGURARE PORT SERVER    ===
# ==================================
# Folose?te portul dat de Render (${PORT}), sau 8080 ca rezerv? pentru rulare local?.
server.port=${PORT:8080}
management.server.port=${PORT:8080}

# Bind to all interfaces
server.address=0.0.0.0

# ==================================
# === CONFIGURARE JPA & HIBERNATE ===
# ==================================
# Creeaz?/actualizeaz? automat schema bazei de date.
spring.jpa.hibernate.ddl-auto=update
# Permite lazy loading în afara unei tranzac?ii (folose?te cu aten?ie).
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Seteaz? fusul orar pentru conexiunile JDBC.
spring.jpa.properties.hibernate.jdbc.time_zone=Europe/Bucharest

# ==================================
# === CONFIGURARE JSON (JACKSON) ===
# ==================================
spring.jackson.serialization.fail-on-empty-beans=false
spring.main.allow-circular-references=true
spring.jackson.time-zone=Europe/Bucharest

# ==================================
# === CONFIGURARE UPLOAD FI?IERE ===
# ==================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# ==================================
# === CONFIGURARE EMAIL (GMAIL)  ===
# ==================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Datele de autentificare pentru email sunt citite din variabilele de mediu.
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}

# ==================================
# === CONFIGURARE STRIPE         ===
# ==================================
# Cheile API pentru Stripe sunt citite din variabilele de mediu.
stripe.secret.key=${STRIPE_SECRET_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

# ==================================
# === CONFIGURARE JWT            ===
# ==================================
# Cheia secret? pentru JWT (citit? din variabile de mediu)
JWT_SECRET=${JWT_SECRET}

# ==================================
# === CONFIGUR?RI LOGGING        ===
# ==================================
# Logging pentru debugging (op?ional)
logging.level.licenta=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:WARN}

# ==================================
# === MANAGEMENT ENDPOINTS       ===
# ==================================
# Pentru health checks pe Render
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# ==================================
# === ALTE CONFIGUR?RI           ===
# ==================================
# Necesare pentru a gestiona cererile de tip OPTIONS (CORS).
spring.mvc.dispatch-options-request=true

# Error handling pentru produc?ie
server.error.include-stacktrace=never
server.error.include-message=always

# ==================================
# === CONFIGURARE DUAL ENVIRONMENT ===
# ==================================
# CORS dinamic bazat pe environment
cors.allowed.origins=${CORS_ORIGINS:http://localhost:3000}

# Serve?te fi?ierele statice React (pentru production)
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.period=31556926

# Pentru React Router (doar production)

spring.mvc.throw-exception-if-no-handler-found=true