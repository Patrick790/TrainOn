import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'application'
}

group = 'licenta'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.springframework.boot:spring-boot-starter-log4j2"
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.4.1'

    // Database
//    implementation 'org.xerial:sqlite-jdbc:3.41.2.2'
    implementation 'org.postgresql:postgresql'
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.1.Final'

    // Security
    implementation 'org.springframework.security:spring-security-core:6.4.1'
    implementation 'org.springframework.security:spring-security-web:6.4.1'
    implementation 'org.springframework.security:spring-security-config:6.4.1'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Other dependencies
    implementation 'com.fasterxml:classmate:1.5.1'
    implementation 'org.jboss.logging:jboss-logging:3.4.1.Final'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.stripe:stripe-java:25.0.0'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Mockito dependencies
    testImplementation 'org.mockito:mockito-core:5.+'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.+'
    testImplementation 'org.mockito:mockito-inline:5.+'
}

test {
    useJUnitPlatform()
}

// Task care rulează 'npm install' și 'npm run build' în folderul /frontend
task buildReact(type: Exec) {
    workingDir 'frontend'
    // Comanda este unificată pentru a rula într-un shell, compatibil cu Windows/Mac/Linux
    commandLine = Os.isFamily(Os.FAMILY_WINDOWS) ? ['cmd', '/c', 'npm install && npm run build'] : ['sh', '-c', 'npm install && npm run build']
}

// Task care copiază fișierele rezultate în resursele Spring Boot
task copyReact(type: Copy) {
    dependsOn buildReact
    from "frontend/build"
    into "src/main/resources/static"
}

// Forțează rularea task-ului de copiere înainte ca proiectul Java să fie împachetat
processResources.dependsOn copyReact